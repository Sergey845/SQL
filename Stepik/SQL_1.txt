--1. Вывести автора, название  и цены тех книг, количество которых меньше 10.
SELECT author, title, price
FROM book
WHERE amount < 10;

--2. Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или больше 600, а стоимость всех экземпляров этих книг больше или равна 5000.
SELECT title, author, price, amount
FROM book
WHERE (price < 500 or price > 600) and price * amount >= 5000;

--3. Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .
SELECT title, author 
FROM book
WHERE (price BETWEEN 540.50 AND 800) AND amount IN (2, 3, 5, 7);

--4. Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). 
--Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).
SELECT author, title
FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY author DESC, title;

--5. Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». 
--Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. 
--Информацию отсортировать по названию книги в алфавитном порядке.
SELECT title, author
FROM book
WHERE title LIKE "_% _%" AND (author like "% С._.%" or author like "% _.С.%")
ORDER BY title;

--6. Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.
SELECT author AS 'Автор', COUNT(amount) AS 'Различных_книг', SUM(amount) AS 'Количество_экземпляров'
FROM book
GROUP BY author;

--7. Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.
SELECT author, MIN(price) AS 'Минимальная_цена', MAX(price) AS 'Максимальная_цена', AVG(price) AS 'Средняя_цена'
FROM book
GROUP BY author;

--8. Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. 
--Среднюю цену округлить до двух знаков после запятой.
SELECT MIN(price) AS 'Минимальная_цена', MAX(price) AS 'Максимальная_цена', ROUND(AVG(price),2) AS 'Средняя_цена'
FROM book
GROUP BY 'Средняя_цена';

--9. Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.
SELECT ROUND(AVG(price),2) AS Средняя_цена, 
    SUM(price*amount) AS Стоимость
FROM book
WHERE amount BETWEEN 5 and 14;

--10. Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». 
--В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. 
--Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.
SELECT author, SUM(price * amount) AS 'Стоимость'
FROM book
WHERE title <> 'Идиот' AND title <> 'Белая гвардия'
GROUP BY author
HAVING SUM(price * amount) > 5000
ORDER BY SUM(price * amount) DESC;

--11. Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. 
--Среднее вычислить как среднее по цене книги.
SELECT author,title, price
FROM book
WHERE price <= (
         SELECT avg(price) 
         FROM book
      )
      order by price DESC;

--12. Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.
SELECT author, title, amount
FROM book
WHERE amount IN(
    SELECT amount
    FROM book
    GROUP BY amount
    HAVING count(amount)=1);

--13. Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.
INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount 
FROM supply
WHERE author NOT IN('Булгаков М.А.' ,  'Достоевский Ф.М.');

--14. Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.
INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount
FROM supply
WHERE author NOT IN(
    SELECT author
    FROM book
    );

--15. Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10, включая границы.
UPDATE book 
SET price = 0.9 * price
WHERE amount BETWEEN 5 AND 10;

--16. Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10.
DELETE FROM supply
WHERE author IN(SELECT author 
    FROM book
    GROUP BY author
    HAVING SUM(amount) > 10);

--17. Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве.
SELECT DISTINCT name 
FROM trip
WHERE city = "Москва"
ORDER BY name;

--18. Вывести два города, в которых чаще всего были в командировках сотрудники. Вычисляемый столбец назвать Количество.
SELECT city, COUNT(name) AS 'Количество'
FROM trip
GROUP BY 1
ORDER BY 2 DESC
LIMIT 2;

--19. Создать новую таблицу back_payment, куда внести информацию о неоплаченных штрафах (Фамилию и инициалы водителя, номер машины, нарушение, сумму штрафа  и  дату нарушения) из таблицы fine.
CREATE TABLE back_payment AS
    SELECT name, number_plate, violation, sum_fine, date_violation   
    FROM fine
WHERE date_payment IS NULL;